{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Player.js"],"names":["State","cc","Enum","None","Run","Jump","Drop","DropEnd","Dead","Class","extends","Component","properties","maxY","jumpHeight","get","_state","set","value","type","statics","init","currentSpeed","state","onCollisionEnter","other","group","game","groupList","node","groupIndex","_G","gameOver","gainScore","jump","initJumpSpeed","startRun","onDropFinished","update","dt","y","groundY","flying","gravity"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,QAAQC,GAAGC,IAAH,CAAQ;AAChBC,UAAS,CAAC,CADM;AAEhBC,SAAS,CAAC,CAFM;AAGhBC,UAAS,CAAC,CAHM;AAIhBC,UAAS,CAAC,CAJM;AAKhBC,aAAS,CAAC,CALM;AAMhBC,UAAS,CAAC;AANM,CAAR,CAAZ;AAQAP,GAAGQ,KAAH,CAAS;AACLC,aAAST,GAAGU,SADP;;AAGLC;AACI;AACAC,cAAM,CAFV;AAGIC,oBAAY;;AAHhB,4CAMU,CANV,2CAQa,CARb,2CAUa,CAVb,iDAYmB,CAZnB,0CAcWd,MAAMG,IAdjB,yCAeW;AACHY,aAAK,eAAY;AACb,mBAAO,KAAKC,MAAZ;AACH,SAHE;AAIHC,aAAK,aAASC,KAAT,EAAe;AAChB,gBAAIA,UAAU,KAAKF,MAAnB,EAA2B;AACvB,qBAAKA,MAAL,GAAcE,KAAd;AACA;AACI;AACA;AACA;AACJ;AACH;AACJ,SAbE;AAcHC,cAAMnB;AAdH,KAfX,eAHK;AAuDLoB,aAAS;AACLpB;AADK,KAvDJ;AA0DL;AACAqB,QA3DK,kBA2DC;AACF,aAAKC,YAAL,GAAoB,CAApB;AACA,aAAKC,KAAL,GAAavB,MAAMG,IAAnB;AACA;AACH,KA/DI;;AAgELqB,sBAAkB,0BAAUC,KAAV,EAAiB;AAC/B,YAAI,KAAKF,KAAL,KAAevB,MAAMQ,IAAzB,EAA+B;AAC3B,gBAAIkB,QAAQzB,GAAG0B,IAAH,CAAQC,SAAR,CAAkBH,MAAMI,IAAN,CAAWC,UAA7B,CAAZ;AACA,gBAAIJ,UAAU,UAAd,EAA0B;AACtB;AACA,qBAAKH,KAAL,GAAavB,MAAMQ,IAAnB;AACAuB,mBAAGJ,IAAH,CAAQK,QAAR;AACA;AACH,aALD,MAMK,IAAIN,UAAU,UAAd,EAA0B;AAC3B;AACAK,mBAAGJ,IAAH,CAAQM,SAAR;AACH;AACL;AACH,KA9EI;AA+ELC,QA/EK,kBAgFL;AACI,aAAKX,KAAL,GAAavB,MAAMK,IAAnB;AACA,aAAKiB,YAAL,GAAoB,KAAKa,aAAzB;AACH,KAnFI;AAoFLC,YApFK,sBAoFO;AACR,aAAKb,KAAL,GAAavB,MAAMI,GAAnB;AACA;AACH,KAvFI;AAwFLiC,kBAxFK,4BAwFa;AACd,aAAKd,KAAL,GAAavB,MAAMI,GAAnB;AACH,KA1FI;;AA2FL;AACAkC,UA5FK,kBA4FGC,EA5FH,EA4FO;AACR,gBAAQ,KAAKhB,KAAb;AACI,iBAAKvB,MAAMK,IAAX;AACI,oBAAI,KAAKiB,YAAL,GAAoB,CAAxB,EAA2B;AACvB,yBAAKC,KAAL,GAAavB,MAAMM,IAAnB;AACH;AACD;AACJ,iBAAKN,MAAMM,IAAX;AACI,oBAAI,KAAKuB,IAAL,CAAUW,CAAV,GAAc,KAAKC,OAAvB,EAAgC;AAC5B,yBAAKZ,IAAL,CAAUW,CAAV,GAAc,KAAKC,OAAnB;AACA,yBAAKlB,KAAL,GAAavB,MAAMO,OAAnB;AACA;AACH;AACD;AACJ,iBAAKP,MAAMG,IAAX;AACA,iBAAKH,MAAMQ,IAAX;AACI;AAfR;AAiBA,YAAIkC,SAAS,KAAKnB,KAAL,KAAevB,MAAMK,IAArB,IAA6B,KAAKwB,IAAL,CAAUW,CAAV,GAAc,KAAKC,OAA7D;AACA,YAAIC,MAAJ,EAAY;AACR,iBAAKpB,YAAL,IAAqBiB,KAAK,KAAKI,OAA/B;AACA,iBAAKd,IAAL,CAAUW,CAAV,IAAeD,KAAK,KAAKjB,YAAzB;AACH;AACJ;AAnHI,CAAT","file":"Player.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\nvar State = cc.Enum({\n    None   : -1,\n    Run    : -1,\n    Jump   : -1,\n    Drop   : -1,\n    DropEnd: -1,\n    Dead   : -1\n});\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 主角跳跃高度\n        maxY: 0,\n        jumpHeight: 0,\n        \n        //-- Y轴最大高度\n        maxY: 0,\n        //-- 地面高度\n        groundY: 0,\n        //-- 重力\n        gravity: 0,\n        //-- 起跳速度\n        initJumpSpeed: 0,\n\n        _state:State.None,\n        state: { \n            get: function () {\n                return this._state;\n            },\n            set: function(value){\n                if (value !== this._state) {\n                    this._state = value;\n                    // if (this._state !== State.None) {\n                        // var animName = State[this._state];\n                        // this.anim.stop();\n                        // this.anim.play(animName);\n                    // }\n                }\n            },\n            type: State\n        },\n        // state:{\n        //     default:State.None,\n        //     type:State\n        // }\n        // state: {\n        //     get: function () {\n        //         return this._state;\n        //     },\n        //     set: function(value){\n        //         if (value !== this._state) {\n        //             this._state = value;\n        //             // if (this._state !== State.None) {\n        //                 // var animName = State[this._state];\n        //                 // this.anim.stop();\n        //                 // this.anim.play(animName);\n        //             // }\n        //         }\n        //     },\n        //     type: State\n        // },\n    },\n    statics: {\n        State\n    },\n    //初始化\n    init(){\n        this.currentSpeed = 0;\n        this.state = State.None;\n        //this.registerListen()\n    },\n    onCollisionEnter: function (other) {\n        if (this.state !== State.Dead) {\n            var group = cc.game.groupList[other.node.groupIndex];\n            if (group === 'Obstacle') {\n                // bump\n                this.state = State.Dead;\n                _G.game.gameOver();\n                // this.enableInput(false);\n            }\n            else if (group === 'NextPipe') {\n                // jump over\n                _G.game.gainScore();\n            }\n       }\n    },\n    jump()\n    {\n        this.state = State.Jump;\n        this.currentSpeed = this.initJumpSpeed;\n    },\n    startRun () {\n        this.state = State.Run;\n        // this.enableInput(true);\n    },\n    onDropFinished () {\n        this.state = State.Run;\n    },\n    //-- 更新\n    update (dt) {\n        switch (this.state) {\n            case State.Jump:\n                if (this.currentSpeed < 0) {\n                    this.state = State.Drop;\n                }\n                break;\n            case State.Drop:\n                if (this.node.y < this.groundY) {\n                    this.node.y = this.groundY;\n                    this.state = State.DropEnd;\n                    // this.spawnDust('DustDown');\n                }\n                break;\n            case State.None:\n            case State.Dead:\n                return;\n        }\n        var flying = this.state === State.Jump || this.node.y > this.groundY;\n        if (flying) {\n            this.currentSpeed -= dt * this.gravity;\n            this.node.y += dt * this.currentSpeed;\n        }\n    },\n\n   \n});\n\n\n\n\n"]}